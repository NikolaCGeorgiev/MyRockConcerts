@using System
@model MyRockConcerts.Web.ViewModels.InputModels.Concerts.GoncertCreateInputModel
@{
    ViewData["Title"] = "Add Concert";
    var venues = Model.Venues.Select(x => new SelectListItem(x.Name, x.Id.ToString()));
}

<div class="text-center">
    <h1>@this.ViewData["Title"]</h1>
</div>

@if (this.TempData["Error"] != null)
{
    @await Component.InvokeAsync("ErrorAlert", new { message = this.TempData["Error"] })
}

<form method="post" asp-action="Create">
    <div class="form-group row">
        <label asp-for="Name"></label>
        <input asp-for="Name" type="text" class="form-control" placeholder="Name">
        <span asp-validation-for="Name" class="text-danger"></span>
    </div>

    <div class="form-group row">
        <label asp-for="ImgUrl"></label>
        <input asp-for="ImgUrl" type="text" class="form-control" placeholder="ImgUrl">
        <span asp-validation-for="ImgUrl" class="text-danger"></span>
    </div>

    <div class="form-group row">
        <label asp-for="Date"></label>
        <input asp-for="Date" type="text" class="form-control" placeholder="yyyy-MM-dd HH:mm" value="@DateTime.UtcNow">
        <span asp-validation-for="Date " class="text-danger"></span>
    </div>

    <div class="form-group row">
        <label asp-for="TicketUrl"></label>
        <input asp-for="TicketUrl" type="text" class="form-control" placeholder="TicketUrl">
        <span asp-validation-for="TicketUrl" class="text-danger"></span>
    </div>

    <div class="form-group row">
        <label asp-for="VenueId"></label>
        <select asp-for="VenueId" asp-items="venues" class="form-control"></select>
        <span asp-validation-for="VenueId" class="text-danger"></span>
    </div>
    <hr />
    <div class="text-center">
        <input type="submit" class="btn btn-primary" />
    </div>
</form>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}


